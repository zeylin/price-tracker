/*
 * This file is generated by jOOQ.
 */
package com.zeylin.pricetracker.db;


import com.zeylin.pricetracker.db.tables.Category;
import com.zeylin.pricetracker.db.tables.City;
import com.zeylin.pricetracker.db.tables.FlywaySchemaHistory;
import com.zeylin.pricetracker.db.tables.Item;
import com.zeylin.pricetracker.db.tables.Location;
import com.zeylin.pricetracker.db.tables.Price;
import com.zeylin.pricetracker.db.tables.records.CategoryRecord;
import com.zeylin.pricetracker.db.tables.records.CityRecord;
import com.zeylin.pricetracker.db.tables.records.FlywaySchemaHistoryRecord;
import com.zeylin.pricetracker.db.tables.records.ItemRecord;
import com.zeylin.pricetracker.db.tables.records.LocationRecord;
import com.zeylin.pricetracker.db.tables.records.PriceRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = UniqueKeys0.CATEGORY_PKEY;
    public static final UniqueKey<CategoryRecord> CATEGORY_NAME_KEY = UniqueKeys0.CATEGORY_NAME_KEY;
    public static final UniqueKey<CityRecord> CITY_PKEY = UniqueKeys0.CITY_PKEY;
    public static final UniqueKey<CityRecord> CITY_NAME_KEY = UniqueKeys0.CITY_NAME_KEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<ItemRecord> ITEM_PKEY = UniqueKeys0.ITEM_PKEY;
    public static final UniqueKey<ItemRecord> ITEM_NAME_KEY = UniqueKeys0.ITEM_NAME_KEY;
    public static final UniqueKey<LocationRecord> LOCATION_PKEY = UniqueKeys0.LOCATION_PKEY;
    public static final UniqueKey<LocationRecord> LOCATION_NAME_KEY = UniqueKeys0.LOCATION_NAME_KEY;
    public static final UniqueKey<PriceRecord> PRICE_PKEY = UniqueKeys0.PRICE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ItemRecord, CategoryRecord> ITEM__ITEM_CATEGORY_ID_FKEY = ForeignKeys0.ITEM__ITEM_CATEGORY_ID_FKEY;
    public static final ForeignKey<LocationRecord, CityRecord> LOCATION__LOCATION_CITY_ID_FKEY = ForeignKeys0.LOCATION__LOCATION_CITY_ID_FKEY;
    public static final ForeignKey<PriceRecord, ItemRecord> PRICE__PRICE_ITEM_ID_FKEY = ForeignKeys0.PRICE__PRICE_ITEM_ID_FKEY;
    public static final ForeignKey<PriceRecord, LocationRecord> PRICE__PRICE_LOCATION_ID_FKEY = ForeignKeys0.PRICE__PRICE_LOCATION_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = Internal.createUniqueKey(Category.CATEGORY, "category_pkey", new TableField[] { Category.CATEGORY.CATEGORY_ID }, true);
        public static final UniqueKey<CategoryRecord> CATEGORY_NAME_KEY = Internal.createUniqueKey(Category.CATEGORY, "category_name_key", new TableField[] { Category.CATEGORY.NAME }, true);
        public static final UniqueKey<CityRecord> CITY_PKEY = Internal.createUniqueKey(City.CITY, "city_pkey", new TableField[] { City.CITY.CITY_ID }, true);
        public static final UniqueKey<CityRecord> CITY_NAME_KEY = Internal.createUniqueKey(City.CITY, "city_name_key", new TableField[] { City.CITY.NAME }, true);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
        public static final UniqueKey<ItemRecord> ITEM_PKEY = Internal.createUniqueKey(Item.ITEM, "item_pkey", new TableField[] { Item.ITEM.ITEM_ID }, true);
        public static final UniqueKey<ItemRecord> ITEM_NAME_KEY = Internal.createUniqueKey(Item.ITEM, "item_name_key", new TableField[] { Item.ITEM.NAME }, true);
        public static final UniqueKey<LocationRecord> LOCATION_PKEY = Internal.createUniqueKey(Location.LOCATION, "location_pkey", new TableField[] { Location.LOCATION.LOCATION_ID }, true);
        public static final UniqueKey<LocationRecord> LOCATION_NAME_KEY = Internal.createUniqueKey(Location.LOCATION, "location_name_key", new TableField[] { Location.LOCATION.NAME }, true);
        public static final UniqueKey<PriceRecord> PRICE_PKEY = Internal.createUniqueKey(Price.PRICE, "price_pkey", new TableField[] { Price.PRICE.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ItemRecord, CategoryRecord> ITEM__ITEM_CATEGORY_ID_FKEY = Internal.createForeignKey(Keys.CATEGORY_PKEY, Item.ITEM, "item_category_id_fkey", new TableField[] { Item.ITEM.CATEGORY_ID }, true);
        public static final ForeignKey<LocationRecord, CityRecord> LOCATION__LOCATION_CITY_ID_FKEY = Internal.createForeignKey(Keys.CITY_PKEY, Location.LOCATION, "location_city_id_fkey", new TableField[] { Location.LOCATION.CITY_ID }, true);
        public static final ForeignKey<PriceRecord, ItemRecord> PRICE__PRICE_ITEM_ID_FKEY = Internal.createForeignKey(Keys.ITEM_PKEY, Price.PRICE, "price_item_id_fkey", new TableField[] { Price.PRICE.ITEM_ID }, true);
        public static final ForeignKey<PriceRecord, LocationRecord> PRICE__PRICE_LOCATION_ID_FKEY = Internal.createForeignKey(Keys.LOCATION_PKEY, Price.PRICE, "price_location_id_fkey", new TableField[] { Price.PRICE.LOCATION_ID }, true);
    }
}
